# ============================================================================
# NGINX CONFIGURATION - TECNOCURSOS AI PRODUCTION
# ============================================================================
#
# Configuração otimizada para ambiente de produção seguindo
# as melhores práticas de performance, segurança e escalabilidade:
#
# - Load balancing para múltiplas instâncias FastAPI
# - SSL/TLS termination
# - Compression e caching otimizados
# - Security headers
# - Rate limiting
# - Static file serving
# - WebSocket support
# - Health check endpoints
#
# Baseado em:
# - FastAPI deployment best practices
# - Nginx production guidelines
# - Security hardening recommendations
#
# Autor: TecnoCursos AI System
# Data: 17/01/2025
# ============================================================================

# Global configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65536;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# HTTP block
http {
    # ========================================================================
    # BASIC SETTINGS
    # ========================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    
    # Hide nginx version
    server_tokens off;
    
    # File I/O optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeouts
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_header_timeout 60;
    client_body_timeout 60;
    reset_timedout_connection on;
    send_timeout 60;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    client_max_body_size 100m;
    large_client_header_buffers 4 256k;
    
    # ========================================================================
    # LOGGING
    # ========================================================================
    log_format main_json escape=json '{'
        '"timestamp": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": $status, '
        '"body_bytes_sent": $body_bytes_sent, '
        '"request_time": $request_time, '
        '"http_referrer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"upstream_addr": "$upstream_addr", '
        '"upstream_response_time": "$upstream_response_time", '
        '"upstream_status": "$upstream_status"'
    '}';
    
    access_log /var/log/nginx/access.log main_json;
    
    # ========================================================================
    # COMPRESSION
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================
    # X-Frame-Options
    add_header X-Frame-Options DENY always;
    
    # X-Content-Type-Options
    add_header X-Content-Type-Options nosniff always;
    
    # X-XSS-Protection
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Referrer Policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'self'; form-action 'self'; base-uri 'self';" always;
    
    # Permissions Policy
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # ========================================================================
    # RATE LIMITING
    # ========================================================================
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=video:10m rate=1r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn:10m;
    limit_conn conn 20;
    
    # ========================================================================
    # UPSTREAM CONFIGURATION
    # ========================================================================
    upstream fastapi_backend {
        least_conn;
        server fastapi-app-1:8000 max_fails=3 fail_timeout=30s;
        server fastapi-app-2:8000 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # ========================================================================
    # HTTP REDIRECT TO HTTPS
    # ========================================================================
    server {
        listen 80;
        server_name tecnocursos.ai www.tecnocursos.ai;
        
        # Security headers for HTTP
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        
        # Health check endpoint (allows HTTP)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # ========================================================================
    # MAIN SERVER BLOCK (HTTPS)
    # ========================================================================
    server {
        listen 443 ssl http2;
        server_name tecnocursos.ai www.tecnocursos.ai;
        
        # ====================================================================
        # SSL CONFIGURATION
        # ====================================================================
        ssl_certificate /etc/nginx/ssl/tecnocursos.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/tecnocursos.ai.key;
        
        # SSL protocols and ciphers
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # SSL optimizations
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # ====================================================================
        # SECURITY
        # ====================================================================
        # Hide server information
        server_tokens off;
        more_clear_headers Server;
        
        # Prevent access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # ====================================================================
        # HEALTH CHECK (No auth required)
        # ====================================================================
        location /health {
            access_log off;
            proxy_pass http://fastapi_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ====================================================================
        # STATIC FILES
        # ====================================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Security for uploads
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
            
            # CORS for static assets
            add_header Access-Control-Allow-Origin *;
        }
        
        # Video files with streaming support
        location /static/videos/ {
            alias /var/www/static/videos/;
            expires 30d;
            add_header Cache-Control "public";
            
            # Enable range requests for video streaming
            add_header Accept-Ranges bytes;
            
            # Security
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }
        
        # ====================================================================
        # API ENDPOINTS WITH RATE LIMITING
        # ====================================================================
        
        # Authentication endpoints (stricter rate limit)
        location ~ ^/api/(auth|login|register) {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Headers
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # File upload endpoints (very strict rate limit)
        location ~ ^/api/(files|upload) {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 100m;
            
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Extended timeouts for uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_request_buffering off;
        }
        
        # Video generation endpoints (most strict)
        location ~ ^/api/scenes/.*/generate-video {
            limit_req zone=video burst=2 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Very long timeouts for video generation
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }
        
        # General API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Standard timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Keep-alive
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
        
        # ====================================================================
        # WEBSOCKET SUPPORT
        # ====================================================================
        location /ws/ {
            proxy_pass http://fastapi_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # ====================================================================
        # DOCUMENTATION ENDPOINTS
        # ====================================================================
        location ~ ^/(docs|redoc|openapi.json) {
            # Only allow in development/staging
            # Comment out the next line for production
            # return 404;
            
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ====================================================================
        # ROOT AND FALLBACK
        # ====================================================================
        location / {
            # Serve index.html or redirect to docs
            try_files $uri $uri/ @fallback;
        }
        
        location @fallback {
            proxy_pass http://fastapi_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # ====================================================================
        # ERROR PAGES
        # ====================================================================
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/error;
            internal;
        }
        
        location = /50x.html {
            root /var/www/error;
            internal;
        }
    }
    
    # ========================================================================
    # MONITORING AND ADMIN INTERFACES
    # ========================================================================
    
    # Grafana (monitoring)
    server {
        listen 443 ssl http2;
        server_name monitoring.tecnocursos.ai;
        
        ssl_certificate /etc/nginx/ssl/tecnocursos.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/tecnocursos.ai.key;
        
        # Basic auth for additional security
        auth_basic "Monitoring Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Portainer (container management)
    server {
        listen 443 ssl http2;
        server_name admin.tecnocursos.ai;
        
        ssl_certificate /etc/nginx/ssl/tecnocursos.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/tecnocursos.ai.key;
        
        # Restrict to admin IPs only
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        location / {
            proxy_pass http://portainer:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 