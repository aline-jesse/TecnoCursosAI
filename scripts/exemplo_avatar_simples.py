"""
Exemplo Simples - Gera√ß√£o de V√≠deo do Avatar
Demonstra como usar a fun√ß√£o principal sem depend√™ncias complexas
"""

import asyncio
import os
from pathlib import Path

# Fun√ß√£o simplificada que n√£o depende do sistema completo
async def exemplo_simples():
    """Exemplo b√°sico sem depend√™ncias do sistema completo"""
    
    print("üé¨ TecnoCursos AI - Gerador de V√≠deo do Avatar")
    print("=" * 50)
    
    # Verificar se as depend√™ncias principais est√£o dispon√≠veis
    try:
        from PIL import Image, ImageDraw, ImageFont
        from moviepy.editor import VideoFileClip, AudioFileClip, ImageClip, CompositeVideoClip
        import numpy as np
        print("‚úÖ Depend√™ncias principais dispon√≠veis")
    except ImportError as e:
        print(f"‚ùå Depend√™ncias faltando: {e}")
        print("Execute: pip install pillow moviepy numpy opencv-python")
        return
    
    # Slides de exemplo
    slides = [
        {
            "title": "Bem-vindos ao Curso de Python",
            "content": "Python √© uma linguagem de programa√ß√£o vers√°til e poderosa, ideal para iniciantes e profissionais."
        },
        {
            "title": "Vari√°veis e Tipos de Dados",
            "content": "Em Python, voc√™ pode armazenar diferentes tipos de informa√ß√µes em vari√°veis: n√∫meros, textos, listas e muito mais."
        },
        {
            "title": "Estruturas de Controle",
            "content": "Use if/else para tomar decis√µes e loops for/while para repetir a√ß√µes no seu c√≥digo Python."
        }
    ]
    
    # Textos para narra√ß√£o
    textos_narracao = [
        "Ol√°! Seja muito bem-vindo ao nosso curso completo de Python. Eu sou sua instrutora virtual e vou acompanhar voc√™ em toda essa jornada de aprendizado.",
        "Agora vamos aprender sobre vari√°veis em Python. √â muito simples: voc√™ pode guardar informa√ß√µes como seu nome, idade ou qualquer outro dado.",
        "As estruturas de controle s√£o fundamentais em programa√ß√£o. Elas permitem que seus programas tomem decis√µes inteligentes e executem tarefas repetitivas."
    ]
    
    try:
        # Tentar importar a fun√ß√£o principal
        from services.avatar_video_generator import generate_avatar_video
        
        print("üé§ Gerando v√≠deo com avatar...")
        
        # Caminho de sa√≠da
        output_path = "./meu_video_avatar.mp4"
        
        # Gerar v√≠deo
        resultado = await generate_avatar_video(
            slides=slides,
            audio_texts=textos_narracao,
            output_path=output_path,
            avatar_style="teacher",  # professional, friendly, teacher, minimal
            video_quality="720p"     # 720p, 1080p, 4k
        )
        
        if resultado["success"]:
            print("\nüéâ SUCESSO! V√≠deo gerado com avatar!")
            print(f"üìÅ Arquivo: {resultado['output_path']}")
            print(f"‚è±Ô∏è  Dura√ß√£o: {resultado['duration']:.1f} segundos")
            print(f"üìä Slides: {resultado['slides_count']}")
            print(f"üìè Resolu√ß√£o: {resultado['resolution']}")
            print(f"üíæ Tamanho: {resultado['file_size'] / (1024*1024):.1f} MB")
            
            # Verificar se arquivo foi criado
            if os.path.exists(resultado['output_path']):
                print(f"‚úÖ Arquivo confirmado em: {os.path.abspath(resultado['output_path'])}")
            else:
                print("‚ö†Ô∏è  Arquivo n√£o encontrado no local especificado")
                
        else:
            print(f"‚ùå Erro na gera√ß√£o: {resultado['error']}")
            
    except ImportError:
        print("‚ö†Ô∏è  M√≥dulo avatar_video_generator n√£o encontrado")
        print("Execute este script a partir da pasta raiz do projeto")
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")

async def exemplo_personalizado():
    """Exemplo com avatar personalizado"""
    
    print("\nüé® Exemplo com Avatar Personalizado")
    print("=" * 40)
    
    try:
        from services.avatar_video_generator import (
            AvatarVideoGenerator, VideoContent, AvatarConfig,
            VideoConfig, SlideConfig, AvatarStyle
        )
        
        # Criar gerador personalizado
        generator = AvatarVideoGenerator()
        
        # Personalizar avatar - estilo amig√°vel
        generator.update_avatar_config(
            style=AvatarStyle.FRIENDLY,
            skin_tone="#f4c2a1",      # Tom de pele mais claro
            hair_color="#654321",     # Cabelo castanho
            shirt_color="#e74c3c",    # Camisa vermelha
            background_color="#ecf0f1" # Fundo cinza claro
        )
        
        # Configurar v√≠deo HD
        generator.update_video_config(
            resolution=(1280, 720),   # HD
            fps=25,                   # 25 FPS
            fade_in_duration=1.0,     # Fade in de 1 segundo
            fade_out_duration=1.0     # Fade out de 1 segundo
        )
        
        # Configurar slides com cores personalizadas
        generator.update_slide_config(
            title_color="#2c3e50",    # T√≠tulo azul escuro
            content_color="#34495e",  # Conte√∫do cinza escuro
            accent_color="#e74c3c",   # Destaque vermelho
            background_color="#ffffff" # Fundo branco
        )
        
        # Conte√∫do sobre JavaScript
        slides = [
            {
                "title": "Introdu√ß√£o ao JavaScript",
                "content": "JavaScript √© a linguagem da web! Ela permite criar p√°ginas interativas e aplica√ß√µes din√¢micas."
            },
            {
                "title": "Fun√ß√µes em JavaScript", 
                "content": "Fun√ß√µes s√£o blocos de c√≥digo reutiliz√°veis que executam tarefas espec√≠ficas. S√£o fundamentais em JS!"
            }
        ]
        
        textos = [
            "Oi, pessoal! Vamos mergulhar no mundo incr√≠vel do JavaScript. √â a linguagem que d√° vida √†s p√°ginas web!",
            "Agora vamos aprender sobre fun√ß√µes. Elas s√£o como pequenas m√°quinas que fazem trabalhos espec√≠ficos no seu c√≥digo."
        ]
        
        # Criar conte√∫do
        content = VideoContent(
            slides=slides,
            audio_texts=textos
        )
        
        print("üé® Gerando v√≠deo personalizado...")
        
        # Gerar v√≠deo
        resultado = await generator.generate_video(
            content=content,
            output_path="./video_js_personalizado.mp4"
        )
        
        if resultado["success"]:
            print("‚úÖ V√≠deo personalizado criado com sucesso!")
            print(f"üìÅ {resultado['output_path']}")
            print(f"‚è±Ô∏è  {resultado['duration']:.1f}s")
        else:
            print(f"‚ùå Erro: {resultado['error']}")
            
    except ImportError as e:
        print(f"‚ö†Ô∏è  M√≥dulo n√£o encontrado: {e}")
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def verificar_estrutura_projeto():
    """Verifica se a estrutura do projeto est√° correta"""
    print("üîç Verificando Estrutura do Projeto")
    print("=" * 35)
    
    arquivos_necessarios = [
        "services/avatar_video_generator.py",
        "services/tts_service.py",
        "app/config.py",
        "app/logger.py"
    ]
    
    estrutura_ok = True
    
    for arquivo in arquivos_necessarios:
        if os.path.exists(arquivo):
            print(f"   ‚úÖ {arquivo}")
        else:
            print(f"   ‚ùå {arquivo} - FALTANDO")
            estrutura_ok = False
    
    if estrutura_ok:
        print("‚úÖ Estrutura do projeto est√° correta!")
        return True
    else:
        print("‚ö†Ô∏è  Execute este script da pasta raiz do projeto TecnoCursosAI")
        return False

async def main():
    """Fun√ß√£o principal"""
    print("üöÄ TecnoCursos AI - Teste Simples do Avatar")
    print("=" * 50)
    
    # Verificar estrutura
    if not verificar_estrutura_projeto():
        return
    
    print("\n")
    
    # Executar exemplos
    await exemplo_simples()
    await exemplo_personalizado()
    
    print("\n" + "=" * 50)
    print("üé¨ Exemplos conclu√≠dos!")
    print("üìÅ Verifique os arquivos .mp4 gerados")
    print("üé• Abra os v√≠deos para ver o avatar em a√ß√£o!")

if __name__ == "__main__":
    # Executar exemplo
    asyncio.run(main()) 